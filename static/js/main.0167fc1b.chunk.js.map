{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accpt","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","data","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","getMyTweets","where","orderBy","get","console","log","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Router","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0167fc1b.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();\n","import { authService } from \"fBase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount(!newAccount);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import {\n  faGithub,\n  faGoogle,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fBase\";\nimport React from \"react\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"fBase\";\nimport React, { useState } from \"react\";\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n    if (ok) {\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing(!editing);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`tweets/${tweetObj.id}`).update({ text: newTweet });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewTweet(value);\n  };\n  return (\n    <div className=\"tweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container tweetEdit\">\n            <input\n              type=\"text\"\n              value={newTweet}\n              required\n              autoFocus\n              placeholder=\"Edit your Tweet\"\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n          {tweetObj.attachmentUrl && (\n            <img src={tweetObj.attachmentUrl} alt={tweetObj.text} />\n          )}\n          {isOwner && (\n            <div className=\"tweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"fBase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst TweetFactory = ({ userObj }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (tweet === \"\") return;\n\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"tweets\").add(tweetObj);\n    setTweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factory__input\"\n          value={tweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accpt=\"image/*\"\n        onChange={onFileChange}\n        style={{ opacity: 0 }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} style={{ backgroundImage: attachment }} />\n          <div className=\"factoryForm__claer\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default TweetFactory;\n","import Tweet from \"components/Tweet\";\nimport TweetFactory from \"components/TweetFactory\";\nimport { dbService } from \"fBase\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"tweets\").onSnapshot((snapshot) => {\n      const tweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n\n      setTweets(tweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            isOwner={tweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName\n                ? `${userObj.displayName}'s Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { authService, dbService } from \"fBase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyTweets = async () => {\n    const tweets = await dbService\n      .collection(\"tweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    console.log(tweets.docs.map((doc) => doc.data()));\n  };\n  useEffect(() => {\n    getMyTweets();\n  }, []);\n\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{ marginTop: 10 }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst Router = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <HashRouter>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import React, { useEffect, useState } from \"react\";\nimport Router from \"components/Router\";\nimport { authService } from \"fBase\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <Router\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        ></Router>\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}